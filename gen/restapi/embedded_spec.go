// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "accountmgr",
    "version": "0.1.0"
  },
  "paths": {
    "/accounts": {
      "post": {
        "tags": [
          "account"
        ],
        "operationId": "add_Account",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/account"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Name should be atleast 3 characters long",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "account": {
      "type": "object",
      "required": [
        "name",
        "user_id"
      ],
      "properties": {
        "created_at": {
          "description": "Timestamp when the user was created",
          "type": "string",
          "format": "date-time",
          "title": "Created At",
          "readOnly": true
        },
        "id": {
          "description": "This is the account id",
          "type": "string",
          "title": "account_id",
          "readOnly": true
        },
        "name": {
          "description": "This is the account name",
          "type": "string",
          "title": "account_name",
          "minLength": 3,
          "example": "ABC"
        },
        "source": {
          "description": "This is the source",
          "type": "string",
          "title": "source",
          "enum": [
            "openstack",
            "openshift",
            "aws"
          ]
        },
        "updated_at": {
          "description": "Timestamp when the user updated something",
          "type": "string",
          "format": "date-time",
          "title": "Updated At",
          "readOnly": true
        },
        "user_id": {
          "description": "This is the id of user",
          "type": "integer",
          "format": "int32",
          "title": "user_id",
          "example": 1
        },
        "user_name": {
          "description": "This is the name of user",
          "type": "string",
          "title": "user_name",
          "readOnly": true,
          "example": "ABC"
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "accountmgr",
    "version": "0.1.0"
  },
  "paths": {
    "/accounts": {
      "post": {
        "tags": [
          "account"
        ],
        "operationId": "add_Account",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/account"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Name should be atleast 3 characters long",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "account": {
      "type": "object",
      "required": [
        "name",
        "user_id"
      ],
      "properties": {
        "created_at": {
          "description": "Timestamp when the user was created",
          "type": "string",
          "format": "date-time",
          "title": "Created At",
          "readOnly": true
        },
        "id": {
          "description": "This is the account id",
          "type": "string",
          "title": "account_id",
          "readOnly": true
        },
        "name": {
          "description": "This is the account name",
          "type": "string",
          "title": "account_name",
          "minLength": 3,
          "example": "ABC"
        },
        "source": {
          "description": "This is the source",
          "type": "string",
          "title": "source",
          "enum": [
            "openstack",
            "openshift",
            "aws"
          ]
        },
        "updated_at": {
          "description": "Timestamp when the user updated something",
          "type": "string",
          "format": "date-time",
          "title": "Updated At",
          "readOnly": true
        },
        "user_id": {
          "description": "This is the id of user",
          "type": "integer",
          "format": "int32",
          "title": "user_id",
          "example": 1
        },
        "user_name": {
          "description": "This is the name of user",
          "type": "string",
          "title": "user_name",
          "readOnly": true,
          "example": "ABC"
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}`))
}
